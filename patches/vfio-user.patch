diff --git a/src/lib.rs b/src/lib.rs
index bb30ed4..9cd0adf 100644
--- a/src/lib.rs
+++ b/src/lib.rs
@@ -105,7 +105,7 @@ bitflags! {
     pub struct DmaMapFlags: u32 {
         const READ_ONLY = 1 << 0;
         const WRITE_ONLY = 1 << 1;
-        const READ_WRITE = Self::READ_ONLY.bits | Self::WRITE_ONLY.bits;
+        const READ_WRITE = Self::READ_ONLY.bits() | Self::WRITE_ONLY.bits();
     }
 
     pub struct DmaUnmapFlags: u32 {
@@ -389,7 +389,7 @@ impl Client {
                 ..Default::default()
             },
             argsz: (size_of::<DmaMap>() - size_of::<Header>()) as u32,
-            flags: DmaMapFlags::READ_WRITE.bits,
+            flags: DmaMapFlags::READ_WRITE.bits(),
             offset,
             address,
             size,
diff --git a/BUILD b/BUILD
new file mode 100644
index 000000000..f0f41ac2c
--- /dev/null
+++ BUILD
@@ -0,0 +1,22 @@
+load("@rules_rust//rust:defs.bzl", "rust_library")
+
+rust_library(
+    name = "vfio-user",
+    srcs = glob(["src/*.rs"]),
+    crate_features = [
+        "kvm",
+    ],
+    proc_macro_deps = ["@crates//:serde_derive"],
+    visibility = ["//visibility:public"],
+    deps = [
+        "@crates//:bitflags",
+        "@crates//:libc",
+        "@crates//:log",
+        "@crates//:serde",
+        "@crates//:serde_json",
+        "@crates//:thiserror",
+        "@crates//:vfio-bindings",
+        "@crates//:vm-memory",
+        "@crates//:vmm-sys-util",
+    ],
+)
+